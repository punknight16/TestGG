steps:
  "1":
    outputs: {}
    inputs: {}
    stepCounter: 1
    name: ""
    x: 0
    y: 0
    type: sourceInput
    operation:
      name: ""
      database: PC_FIVETRAN_DB
      type: sourceInput
      dataset: GOOGLE_ANALYTICS
      table: GOOGLE_ANALYTICS
  "2":
    outputs: {}
    inputs: {}
    stepCounter: 2
    name: ""
    x: 0
    y: 0
    type: sourceInput
    operation:
      name: ""
      database: PC_FIVETRAN_DB
      type: sourceInput
      dataset: GITHUB
      table: COMMIT
  "3":
    outputs: {}
    inputs: {}
    stepCounter: 3
    name: ""
    x: 0
    y: 0
    type: sql
    operation:
      name: uniquePageViews
      sqlType: Table
      type: sql
      sql: |-
        SELECT
          DATE AS DATE,
          UNIQUE_PAGEVIEWS AS UNIQUE_PAGEVIEWS
        FROM
          ${GOOGLE_ANALYTICS}
  "4":
    outputs: {}
    inputs: {}
    stepCounter: 4
    name: ""
    x: 0
    y: 0
    type: sql
    operation:
      name: COMMITS_BY_DATE
      sqlType: Table
      type: sql
      sql: |-
        SELECT
          TO_DATE(COMMITTER_DATE) AS DATE1,
          MESSAGE AS MESSAGE
        FROM
          ${COMMIT}
  "5":
    outputs: {}
    inputs: {}
    stepCounter: 5
    name: ""
    x: 0
    y: 0
    type: sql
    operation:
      name: VIEWS_BY_WK
      sqlType: Table
      type: sql
      sql: |-
        SELECT
          WEEK(DATE) AS WK1,
          SUM(UNIQUE_PAGEVIEWS) AS TOTAL_PAGEVIEWS
        FROM
          ${uniquePageViews}
          GROUP BY WK1
          ORDER BY WK1
  "6":
    outputs: {}
    inputs: {}
    stepCounter: 6
    name: ""
    x: 0
    y: 0
    type: sql
    operation:
      name: COMMITS_BY_WK
      sqlType: View
      type: sql
      sql: |-
        WITH query_1 AS (
        SELECT
          WEEK(DATE1) AS WK2,
          MESSAGE AS MESSAGE,
          RANK() OVER (
            PARTITION BY WK2 
            ORDER BY LENGTH(MESSAGE) DESC 
          ) AS MESSAGE_RANK
        FROM
          ${COMMITS_BY_DATE}
        )
        SELECT
          WK2 AS WK2,
          MESSAGE AS MESSAGE
          FROM query_1
          WHERE MESSAGE_RANK = 1
          ORDER BY WK2
  "7":
    outputs: {}
    inputs: {}
    stepCounter: 7
    name: ""
    x: 0
    y: 0
    type: sql
    operation:
      name: WK_JOIN
      sqlType: Table
      type: sql
      sql: |-
        SELECT
          VIEWS_BY_WK.WK1 AS WK,
          VIEWS_BY_WK.TOTAL_PAGEVIEWS AS TOTAL_PAGEVIEWS,
          COMMITS_BY_WK.MESSAGE AS MESSAGE
        FROM
          ${VIEWS_BY_WK} AS VIEWS_BY_WK
          INNER JOIN ${COMMITS_BY_WK} AS COMMITS_BY_WK ON VIEWS_BY_WK.WK1
          = COMMITS_BY_WK.WK2
  "8":
    outputs: {}
    inputs: {}
    stepCounter: 8
    name: ""
    x: 0
    y: 0
    type: sql
    operation:
      name: LAST_TEN_COMMITS
      sqlType: Table
      type: sql
      sql: |-
        SELECT
          DATE1 AS DATE1,
          MESSAGE AS MESSAGE
        FROM
          ${COMMITS_BY_DATE}
          ORDER BY DATE1 DESC
          LIMIT 10
  "9":
    outputs: {}
    inputs: {}
    stepCounter: 9
    name: ""
    x: 0
    y: 0
    type: sourceInput
    operation:
      name: ""
      database: PC_FIVETRAN_DB
      type: sourceInput
      dataset: SLACK_MESSAGES
      table: SLACK_MESSAGES
  "10":
    type: sourceInput
    operation:
      database: PC_FIVETRAN_DB
      dataset: GITHUB
      table: USER
      name: ""
      type: sourceInput
    inputs: {}
    outputs: {}
    name: ""
    stepCounter: 10
    x: 0
    y: 0
  "11":
    type: sourceInput
    operation:
      database: PC_FIVETRAN_DB
      dataset: GITHUB
      table: USER_EMAIL
      name: ""
      type: sourceInput
    inputs: {}
    outputs: {}
    name: ""
    stepCounter: 11
    x: 0
    y: 0
  "12":
    type: sql
    operation:
      sql: |-
        SELECT
          COMMIT.SHA AS SHA,
          COMMIT.REPOSITORY_ID AS REPOSITORY_ID,
          COMMIT.COMMITTER_DATE AS COMMITTER_DATE,
          COMMIT.AUTHOR_EMAIL AS AUTHOR_EMAIL,
          COMMIT.AUTHOR_NAME AS AUTHOR_NAME,
          COMMIT.COMMITTER_EMAIL AS COMMITTER_EMAIL,
          COMMIT.COMMITTER_NAME AS COMMITTER_NAME,
          COMMIT.AUTHOR_DATE AS AUTHOR_DATE,
          COMMIT.MESSAGE AS MESSAGE,
          USER.ID AS ID,
          USER.LOGIN AS LOGIN,
          USER.TYPE AS TYPE,
          USER.SITE_ADMIN AS SITE_ADMIN,
          USER.NAME AS NAME1,
          USER.COMPANY AS COMPANY,
          USER.BLOG AS BLOG,
          USER.LOCATION AS LOCATION,
          USER.HIREABLE AS HIREABLE,
          USER.BIO AS BIO,
          USER.CREATED_AT AS CREATED_AT,
          USER.UPDATED_AT AS UPDATED_AT,
          USER_EMAIL.EMAIL AS EMAIL,
          USER_EMAIL.USER_ID AS USER_ID,
          USER_EMAIL.NAME AS NAME2
        FROM
          ${USER_EMAIL} AS USER_EMAIL
          INNER JOIN ${COMMIT} AS COMMIT ON USER_EMAIL.EMAIL
          = COMMIT.AUTHOR_EMAIL
          INNER JOIN ${USER} AS USER ON COMMIT.AUTHOR_NAME
          = USER.LOGIN
      name: JOIN_COMMIT_ON_EMAIL_NAME
      sqlType: Table
      type: sql
    inputs: {}
    outputs: {}
    name: ""
    stepCounter: 12
    x: 0
    y: 0
  "13":
    type: sql
    operation:
      sql: |-
        SELECT
          AUTHOR_EMAIL AS AUTHOR_EMAIL,
          AUTHOR_DATE AS AUTHOR_DATE,
          MESSAGE AS MESSAGE
        FROM
          ${JOIN_COMMIT_ON_EMAIL_NAME}
      name: FILTER_COMMIT
      sqlType: Table
      type: sql
    inputs: {}
    outputs: {}
    name: ""
    stepCounter: 13
    x: 0
    y: 0
  "14":
    type: sql
    operation:
      sql: |-
        SELECT
          AUTHOR_EMAIL AS AUTHOR_EMAIL,
          COUNT(*) AS C,
          MONTH(AUTHOR_DATE) AS MO
        FROM
          ${FILTER_COMMIT}
          GROUP BY AUTHOR_EMAIL, MO
          ORDER BY MO
      name: COUNT_COMMITS
      sqlType: Table
      type: sql
    inputs: {}
    outputs: {}
    name: ""
    stepCounter: 14
    x: 0
    y: 0
treeData:
  nodes:
    - stepCounter: 1
      nodes: []
    - stepCounter: 2
      nodes: []
    - stepCounter: 3
      nodes: []
    - stepCounter: 4
      nodes: []
    - stepCounter: 5
      nodes: []
    - stepCounter: 6
      nodes: []
    - stepCounter: 7
      nodes: []
    - stepCounter: 8
      nodes: []
    - stepCounter: 10
      nodes: []
    - stepCounter: 11
      nodes: []
    - stepCounter: 12
      nodes: []
    - stepCounter: 13
      nodes: []
    - stepCounter: 14
      nodes: []
